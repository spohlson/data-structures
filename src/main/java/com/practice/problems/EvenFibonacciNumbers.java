package com.practice.problems;

import org.junit.Assert;
import org.junit.Test;

public class EvenFibonacciNumbers {

	/**
	 * Each new term in the Fibonacci sequence is generated by adding the
	 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
	 * 
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	 * 
	 * By considering the terms in the Fibonacci sequence whose values do not
	 * exceed four million, find the sum of the even-valued terms.
	 */

	public long getEvenFibonacciNumsSum() {
		long limit = 4000000L;
		long evenSum = 0L;

		long prevOne = 1L;
		long prevTwo = 1L;
		long element = 0L;

		while (element <= limit) {
			element = prevOne + prevTwo;
			prevOne = prevTwo;
			prevTwo = element;

			if ((element % 2) == 0) {
				evenSum += element;
			}
		}

		return evenSum;
	}

	@Test
	public void test() {
		long sum = getEvenFibonacciNumsSum();
		long expected = 4613732L;
		Assert.assertTrue(sum == expected);
	}

}
